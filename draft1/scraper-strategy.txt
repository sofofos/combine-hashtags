Okay IG's API sucks donkey balls so we're gonna scrape the explore page

NEWER STRATEGY:
  Cant download the full data from command line, but we have atleast the caption text, img URL, and the post url. thats enough to start.
  Use the following node names:
    caption text: JSON.node.edge_media_to_caption.edges[0].node.text // search for hashtags here
    post URL code: JSON.node.shortcode // to be prefixed by "instagram.com/p/"
    image URL: JSON.node.display_url

We can download the html data from a page's results with:
  google-chrome --headless --dump-dom 'https://www.instagram.com/explore/tags/cats/' > dump-from-bash.html

------

messing abouts on chrome devtools console:
  base = https://www.instagram.com/explore/tags/cat/

  tags = document.getElementsByClassName("xil3i").children
  (impractical, they probably change these class names regularly)

results
  row class names:  Nnq7C weEfm
  rows = document.getElementsByClassName("Nnq7C weEfm")

first result's post URL:
  rows[0].firstChild.firstElementChild["href"]

Do I build a quick app hoping to pass FB app review, or stick to demonstrating
results from my own profile?
Stick to the simplest notion, and see how you can package it as a Ruby gem

From here on, its all about file and string manipulations to extract results data
Specifically, a JSON dump seems to appear between {window._sharedData =} AND {;</script>}
Capture that, parse it and extract only the following: caption, username, url to post.


test string: window._sharedData = {"config":{"csrf_token":"frontend_env":"prod"};</script>


USE THIS REGEX?:
  [^_sharedData = ](\w*\s*\b*\W*\"\S*\}?\s?)[^;<\/script>
